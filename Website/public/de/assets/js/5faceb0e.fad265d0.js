"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[7902],{5888:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var t=n(4848),a=n(8453);const s={sidebar_position:2},i="Get All Values From Parameter",l={id:"dev-docs/measurement-management/get_all_values_from_parameter",title:"Get All Values From Parameter",description:"The Get All Values From Parameter endpoint allows you to retrieve all water values for a specific parameter in an environment. This is useful for monitoring trends over time, for example, checking how the pH level or temperature of the water has changed.",source:"@site/docs/dev-docs/measurement-management/get_all_values_from_parameter.md",sourceDirName:"dev-docs/measurement-management",slug:"/dev-docs/measurement-management/get_all_values_from_parameter",permalink:"/de/docs/dev-docs/measurement-management/get_all_values_from_parameter",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"devDocSidebar",previous:{title:"Add Water Values",permalink:"/de/docs/dev-docs/measurement-management/add_water_values"},next:{title:"Get Total Entries for a Parameter",permalink:"/de/docs/dev-docs/measurement-management/get_total_entries"}},o={},d=[{value:"Endpoint",id:"endpoint",level:2},{value:"Request Parameters",id:"request-parameters",level:2},{value:"Headers",id:"headers",level:2},{value:"Example Request",id:"example-request",level:2},{value:"Example Response",id:"example-response",level:2}];function m(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"get-all-values-from-parameter",children:"Get All Values From Parameter"})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.strong,{children:"Get All Values From Parameter"})," endpoint allows you to retrieve all water values for a specific parameter in an environment. This is useful for monitoring trends over time, for example, checking how the pH level or temperature of the water has changed."]}),"\n",(0,t.jsx)(r.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"GET /api/environments/<int:environment_id>/values/parameters/<str:parameter_name>/<int:number_of_entries>/"})}),"\n",(0,t.jsx)(r.h2,{id:"request-parameters",children:"Request Parameters"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"environment_id"}),": The ID of the environment from which you want to retrieve the water values. This is required and should be an integer."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"parameter_name"}),": The name of the water parameter you want to retrieve. This must be a string and match one of the supported water parameters listed below."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"number_of_entries"}),": The number of latest entries you want to retrieve for the specified parameter. This is required and should be an integer."]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"headers",children:"Headers"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Name"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Authorization"}),(0,t.jsx)(r.td,{children:"string"}),(0,t.jsx)(r.td,{children:"Bearer token for authentication (Access Token)."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Content-Type"}),(0,t.jsx)(r.td,{children:"string"}),(0,t.jsxs)(r.td,{children:["Must be set to ",(0,t.jsx)(r.code,{children:"application/json"}),"."]})]})]})]}),"\n",(0,t.jsx)(r.h2,{id:"example-request",children:"Example Request"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'curl -X GET "https://dev.aquaware.cloud/api/environments/1/values/parameters/PH/10/" \\\r\n-H "x-api-key: <api_key>"\r\n-H "Content-Type: application/json"\n'})}),"\n",(0,t.jsx)(r.h2,{id:"example-response",children:"Example Response"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",children:'{\r\n  "parameter": "PH",\r\n  "values": [\r\n    {\r\n      "measured_at": "2023-09-20T12:45:00Z",\r\n      "value": 7.5,\r\n      "unit": "pH"\r\n    },\r\n    {\r\n      "measured_at": "2023-09-19T12:45:00Z",\r\n      "value": 7.6,\r\n      "unit": "pH"\r\n    },\r\n    {\r\n      "measured_at": "2023-09-18T12:45:00Z",\r\n      "value": 7.4,\r\n      "unit": "pH"\r\n    }\r\n  ]\r\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["In the above example, we retrieved the last 3 pH values from environment 123.\r\nEach entry contains the time the measurement was taken (",(0,t.jsx)(r.code,{children:"measured_at"}),"), the value (",(0,t.jsx)(r.code,{children:"value"}),"), and the unit of measurement (",(0,t.jsx)(r.code,{children:"unit"}),")."]})]})}function c(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>l});var t=n(6540);const a={},s=t.createContext(a);function i(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);